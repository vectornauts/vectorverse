"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerLayoutControl = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const core_1 = require("@react-sigma/core");
const play_solid_svg_1 = require("./assets/icons/play-solid.svg");
const stop_solid_svg_1 = require("./assets/icons/stop-solid.svg");
function WorkerLayoutControl({ id, className, style, layout, settings, autoRunFor, children, labels = {}, }) {
    const sigma = (0, core_1.useSigma)();
    const { stop, start, isRunning } = layout(settings);
    const props = {
        className: `react-sigma-control ${className || ""}`,
        id,
        style,
    };
    (0, react_1.useEffect)(() => {
        if (!sigma) {
            return;
        }
        let timeout = null;
        if (autoRunFor !== undefined && autoRunFor > -1 && sigma.getGraph().order > 0) {
            start();
            timeout =
                autoRunFor > 0
                    ? window.setTimeout(() => {
                        stop();
                    }, autoRunFor)
                    : null;
        }
        return () => {
            if (timeout) {
                clearTimeout(timeout);
            }
        };
    }, [autoRunFor, start, stop, sigma]);
    return (react_1.default.createElement("div", Object.assign({}, props),
        react_1.default.createElement("button", { onClick: () => (isRunning ? stop() : start()), title: isRunning ? labels["stop"] || "Stop the layout animation" : labels["start"] || "Start the layout animation" },
            children && !isRunning && children[0],
            children && isRunning && children[1],
            !children && !isRunning && react_1.default.createElement(play_solid_svg_1.ReactComponent, { style: { width: "1em" } }),
            !children && isRunning && react_1.default.createElement(stop_solid_svg_1.ReactComponent, { style: { width: "1em" } }))));
}
exports.WorkerLayoutControl = WorkerLayoutControl;
//# sourceMappingURL=WorkerLayoutControl.js.map