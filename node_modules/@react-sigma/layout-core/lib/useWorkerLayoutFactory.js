"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useWorkerLayoutFactory = void 0;
const lodash_1 = require("lodash");
const react_1 = require("react");
const core_1 = require("@react-sigma/core");
function useWorkerLayoutFactory(worker) {
    const hook = (parameter) => {
        const sigma = (0, core_1.useSigma)();
        const [isRunning, setIsRunning] = (0, react_1.useState)(false);
        const [layout, setLayout] = (0, react_1.useState)(null);
        const settings = (0, react_1.useRef)();
        if (!(0, lodash_1.isEqual)(settings.current, parameter))
            settings.current = parameter;
        (0, react_1.useEffect)(() => {
            setIsRunning(false);
            let newLayout = null;
            if (settings.current)
                newLayout = new worker(sigma.getGraph(), settings.current);
            setLayout(newLayout);
            return () => {
                if (newLayout !== null)
                    newLayout.kill();
            };
        }, [sigma, settings, setLayout, setIsRunning]);
        const stop = (0, react_1.useCallback)(() => {
            if (layout) {
                layout.stop();
                setIsRunning(false);
            }
        }, [layout, setIsRunning]);
        const start = (0, react_1.useCallback)(() => {
            if (layout) {
                layout.start();
                setIsRunning(true);
            }
        }, [layout, setIsRunning]);
        const kill = (0, react_1.useCallback)(() => {
            if (layout) {
                layout.kill();
            }
            setIsRunning(false);
        }, [layout, setIsRunning]);
        return { stop, start, kill, isRunning };
    };
    return hook;
}
exports.useWorkerLayoutFactory = useWorkerLayoutFactory;
//# sourceMappingURL=useWorkerLayoutFactory.js.map